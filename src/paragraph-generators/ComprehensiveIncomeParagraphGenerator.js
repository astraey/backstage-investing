import { DollarFormatter } from 'utils/DollarFormatter';
import { Typography } from '@mui/material';
import { useTheme } from '@mui/material/styles';

const ComprehensiveIncomeParagraphGenerator = ({
  companyName,
  companyTicker,
  slot,
  datesChart,
  revenueValuesChart,
  costOfRevenue,
  comprehensiveIncomeNetOfTax,
}) => {
  const theme = useTheme();
  let revenueValues = slot === 'All Time' ? revenueValuesChart : revenueValuesChart.slice(revenueValuesChart.length - 8, revenueValuesChart.length);
  let comprehensiveIncomeNetOfTaxValues =
    slot === 'All Time'
      ? comprehensiveIncomeNetOfTax
      : comprehensiveIncomeNetOfTax.slice(comprehensiveIncomeNetOfTax.length - 8, comprehensiveIncomeNetOfTax.length);

  let dates = slot === 'All Time' ? datesChart : datesChart.slice(datesChart.length - 8, datesChart.length);

  let comprehensiveIncomeSum = 0;
  let revenueSum = 0;

  comprehensiveIncomeNetOfTaxValues.forEach((element) => {
    comprehensiveIncomeSum += element;
  });

  revenueValues.forEach((element) => {
    revenueSum += element;
  });

  let comprehensiveIncomeAverage = comprehensiveIncomeSum / comprehensiveIncomeNetOfTaxValues.length;
  let revenueAverage = revenueSum / revenueValues.length;
  let percentageDifference = (comprehensiveIncomeAverage / revenueAverage) * 100;

  return (
    <span>
      Over the last {dates.length >= 4 ? `${Math.ceil(dates.length / 4)} years` : `${dates.length} quarters`}, {companyName || companyTicker} has
      reported a total{' '}
      {comprehensiveIncomeSum > 0 ? (
        <span>
          gain of{' '}
          <Typography component="span" sx={{ color: theme.palette.success.main, fontWeight: 'bold' }}>
            {`${DollarFormatter(comprehensiveIncomeSum.toFixed(1))}`}
          </Typography>
        </span>
      ) : (
        <span>
          loss of{' '}
          <Typography component="span" sx={{ color: theme.palette.error.main, fontWeight: 'bold' }}>
            {`${DollarFormatter(comprehensiveIncomeSum.toFixed(1))}`}
          </Typography>
          . The company has lost money
        </span>
      )}
      , representing <b>{percentageDifference.toFixed(1)}%</b> of their total revenue
      {percentageDifference > 25 ? (
        <span>, and a great margin. </span>
      ) : percentageDifference > 0 ? (
        <span>, and an acceptable margin. </span>
      ) : (
        <span>.</span>
      )}
      This value captures the overall financial performance of a company, including both realized and unrealized gains or losses, and represents the
      total income or loss generated by a company, after accounting for applicable taxes.
    </span>
  );
};

export default ComprehensiveIncomeParagraphGenerator;
